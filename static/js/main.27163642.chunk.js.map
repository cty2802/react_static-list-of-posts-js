{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","todo","userId","usersFromServer","find","commentsFromServer","filter","postId","App","ReactDOM","render","document","getElementById"],"mappings":"o18IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,qBAAKC,UAAU,cAAf,SACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,IAGH,qBAAKE,UAAU,oBAAf,SACGD,UCnBEG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjB,OAARA,QAAQ,IAARA,KAAUC,OACR,qBAAKJ,UAAU,cAAf,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,SAI7C,mBAAG,UAAQ,oBAAX,8BCTMC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBX,EAEEW,EAFFX,KACAC,EACEU,EADFV,MAGF,OACE,8BACG,eACD,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,SCRIY,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAZ,EAGEW,EAHFX,KACAS,EAEEE,EAFFF,KACAL,EACEO,EADFP,SAGF,OACE,qBAAKH,UAAU,WAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,cAAC,EAAD,CAAUH,KAAMA,IAEhB,mBAAGR,UAAU,iBAAb,SAA+BD,IAE/B,uBAEA,cAAC,EAAD,CAAaI,SAAUA,WCrBlBS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OAEb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCM/B,IAAMO,EAAQC,EAAgBT,KAAI,SAAAU,GAAI,kCACxCA,GADwC,IAE3CP,MAPmBQ,EAODD,EAAKC,OANhBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MACzC,MAMPb,SAAUgB,EAAmBC,QAAO,SAAAjB,GAAQ,OAAIA,EAASkB,SAAWN,EAAKT,OACtE,OATL,IAAqBU,KAYRM,EAAM,kBACjB,0BAAStB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCnBrBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.27163642.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n\n        {' by '}\n\n        <a\n          className=\"CommentInfo__email\"\n          href={`mailto:${email}`}\n        >\n          {email}\n        </a>\n\n        <div className=\"CommentInfo__body\">\n          {body}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import './CommentList.scss';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments?.length ? (\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo comment={comment} key={comment.id} />\n      ))}\n    </div>\n\n  ) : (<b data-cy=\"NoCommentsMessage\">No comments yet</b>));\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <p>\n      {' Posted by  '}\n      <a className=\"UserInfo\" href={`mailto:${email}`}>\n        {name}\n      </a>\n    </p>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">{title}</h3>\n\n        <UserInfo user={user} />\n\n        <p className=\"PostInfo__body\">{body}</p>\n\n        <hr />\n\n        <CommentList comments={comments} />\n      </div>\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId)\n      || null;\n}\n\nexport const posts = postsFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n  comments: commentsFromServer.filter(comments => comments.postId === todo.id)\n  || null,\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}